# Эмулятор судного дня

# Для закрепления знаний давайте напишем эмулятор судного дня. 
# Машины захватили мир, идет борьба за выживание. 
# Кто выживет человечество или машины - покажет судьба. 
# Точнее, генератор случайных чисел.

# Программа будет выводить на экран поток случайных сообщений, 
# которые будут представлять какие-либо события в мире. 
# Если бы это была графическая программа, было бы интереснее. 
# Но в текстовом виде степень интересности зависит лишь от воображения зрителя. 
# Возможно, кому-то понравится наша программа и пользователи поставят ее как screen saver.

# Важное примечание: написать программу можно и проще, и лучше. 
# Но не весь язык руби мы пока изучили. 
# Поэтому ограничимся тем, что есть.

# Для начала условимся, что людей и машин осталось поровну: по 10000 с каждой стороны. 
# В каждом цикле программы будет происходить одно случайное событие. 
# И с одинаковой долей вероятности число людей или машин будет убавляться. 
# Победа наступает в том случае, когда или людей, или машин не осталось. 

# Во-первых, сформулируем правило победы. 
# У нас будет главный цикл и две переменных:


# humans = 10_000
# machines = 10_000

# while True:
#     print("Start")
#     if check_victory():
#         exit()


# Две переменные `humans` и `machines` будут хранить значение о количестве выживших.
# Метод `check_victory()` будет возвращать значение типа Boolean и 
# если наступила победа одной из сторон (не важно какой), 
# то производится выход из программы. 
# Если победы не наступило, борьба продолжается. 
# Пусть этот метод также выводит сообщение о том, кто в итоге выиграл.

# Теперь нужно определить несколько событий, которые могут случится. 
# Назовем их `event1`, `event2` и `event3`. 
# В зависимости от случайного значения будет вызываться тот или иной метод. 
# Будем подбрасывать игральную кость (dice), которая пока будет принимать значение от 1 до 3:

# def event1:
  # ...

# def event2:
  # ...

# def event3:
  # ...

# ...

# dice = rand(1, 3)

# if dice == 1:
#   event1()
# elif dice == 2:
#   event2()
# elsif dice == 3:
#   event3()


# Ну и завершим цикл конструкцией sleep, которая будет ждать 
# случайное количество секунд (от 0.3 до 1.5).

# Важно: Если мы хотим изменять глобальные переменные (humans и machines) 
# в функциях, мы должны в начале функции говорить питону что меняем
# глобальную переменную. Например:
# 
# def change_humans():
#     global humans
#     humans -= 1